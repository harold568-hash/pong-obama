const canvas = document.getElementById('pong');
const ctx = canvas.getContext('2d');

// Define paddles
const paddleWidth = 10, paddleHeight = 100;
let leftPaddleY = (canvas.height - paddleHeight) / 2;
let rightPaddleY = (canvas.height - paddleHeight) / 2;
let leftPaddleDy = 0, rightPaddleDy = 0;

// Define the ball (Obama's face)
const ballRadius = 30;
let ballX = canvas.width / 2, ballY = canvas.height / 2;
let ballSpeedX = 4, ballSpeedY = 4;

// Load Obama's face image
const obamaFace = new Image();
obamaFace.src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Barack_Obama_2012_portrait_crop.jpg/800px-Barack_Obama_2012_portrait_crop.jpg';

// Control the paddles
document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowUp') rightPaddleDy = -8;
    if (e.key === 'ArrowDown') rightPaddleDy = 8;
    if (e.key === 'w') leftPaddleDy = -8;
    if (e.key === 's') leftPaddleDy = 8;
});
document.addEventListener('keyup', (e) => {
    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') rightPaddleDy = 0;
    if (e.key === 'w' || e.key === 's') leftPaddleDy = 0;
});

// Draw paddles
function drawPaddles() {
    ctx.fillStyle = 'white';
    ctx.fillRect(0, leftPaddleY, paddleWidth, paddleHeight);
    ctx.fillRect(canvas.width - paddleWidth, rightPaddleY, paddleWidth, paddleHeight);
}

// Draw the ball (Obama's face)
function drawBall() {
    ctx.drawImage(obamaFace, ballX - ballRadius, ballY - ballRadius, ballRadius * 2, ballRadius * 2);
}

// Move the ball
function moveBall() {
    ballX += ballSpeedX;
    ballY += ballSpeedY;

    if (ballY + ballRadius > canvas.height || ballY - ballRadius < 0) {
        ballSpeedY = -ballSpeedY;
    }

    // Paddle collision
    if (ballX - ballRadius < paddleWidth && ballY > leftPaddleY && ballY < leftPaddleY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
    } else if (ballX + ballRadius > canvas.width - paddleWidth && ballY > rightPaddleY && ballY < rightPaddleY + paddleHeight) {
        ballSpeedX = -ballSpeedX;
    }

    // Ball out of bounds
    if (ballX - ballRadius < 0 || ballX + ballRadius > canvas.width) {
        resetBall();
    }
}

// Reset the ball position
function resetBall() {
    ballX = canvas.width / 2;
    ballY = canvas.height / 2;
    ballSpeedX = -ballSpeedX;
    ballSpeedY = 4;
}

// Update game
function update() {
    leftPaddleY += leftPaddleDy;
    rightPaddleY += rightPaddleDy;

    // Prevent paddles from going out of bounds
    if (leftPaddleY < 0) leftPaddleY = 0;
    if (leftPaddleY + paddleHeight > canvas.height) leftPaddleY = canvas.height - paddleHeight;
    if (rightPaddleY < 0) rightPaddleY = 0;
    if (rightPaddleY + paddleHeight > canvas.height) rightPaddleY = canvas.height - paddleHeight;

    moveBall();

    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawPaddles();
    drawBall();

    requestAnimationFrame(update);
}

// Start game when the image is loaded
obamaFace.onload = () => {
    update();
};
